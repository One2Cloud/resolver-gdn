/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EDNSRegistry, EDNSRegistryInterface } from "../EDNSRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "NewResolver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "NewTTL",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "recordExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "resolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setSubnodeOwner",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setSubnodeRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setTTL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "ttl",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635b0fc9c31161008c578063a22cb46511610066578063a22cb4651461020e578063cf4088231461022a578063e985e9c514610246578063f79fe53814610276576100cf565b80635b0fc9c3146101cc5780635ef2c7f0146101e85780638129fc1c14610204576100cf565b80630178b8bf146100d457806302571be31461010457806306ab59231461013457806314ab90381461016457806316a25cbd146101805780631896f70a146101b0575b600080fd5b6100ee60048036038101906100e99190611031565b6102a6565b6040516100fb919061109f565b60405180910390f35b61011e60048036038101906101199190611031565b6102e6565b60405161012b919061109f565b60405180910390f35b61014e600480360381019061014991906110e6565b61036a565b60405161015b9190611148565b60405180910390f35b61017e600480360381019061017991906111a3565b6104ee565b005b61019a60048036038101906101959190611031565b61066e565b6040516101a791906111f2565b60405180910390f35b6101ca60048036038101906101c5919061120d565b6106a2565b005b6101e660048036038101906101e1919061120d565b61083a565b005b61020260048036038101906101fd919061124d565b610987565b005b61020c6109a9565b005b61022860048036038101906102239190611300565b610a95565b005b610244600480360381019061023f9190611340565b610b92565b005b610260600480360381019061025b91906113a7565b610bad565b60405161026d91906113f6565b60405180910390f35b610290600480360381019061028b9190611031565b610c41565b60405161029d91906113f6565b60405180910390f35b60006001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610360576000915050610365565b809150505b919050565b60008360006001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806104685750600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61047157600080fd5b60008686604051602001610486929190611432565b6040516020818303038152906040528051906020012090506104a88186610cb0565b85877fce0457fe73731f824cc272376169235128c118b49d344817417c6d108d155e82876040516104d9919061109f565b60405180910390a38093505050509392505050565b8160006001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806105ea5750600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6105f357600080fd5b837f1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa688460405161062391906111f2565b60405180910390a2826001600086815260200190815260200160002060010160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050565b60006001600083815260200190815260200160002060010160149054906101000a900467ffffffffffffffff169050919050565b8160006001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061079e5750600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6107a757600080fd5b837f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a0846040516107d7919061109f565b60405180910390a2826001600086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b8160006001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806109365750600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61093f57600080fd5b6109498484610cb0565b837fd4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d26684604051610979919061109f565b60405180910390a250505050565b600061099486868661036a565b90506109a1818484610d09565b505050505050565b600060019054906101000a900460ff166109d15760008054906101000a900460ff16156109da565b6109d9610ec0565b5b610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a10906114e1565b60405180910390fd5b60008060019054906101000a900460ff161590508015610a69576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610a71610ed1565b8015610a925760008060016101000a81548160ff0219169083151502179055505b50565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b8691906113f6565b60405180910390a35050565b610b9c848461083a565b610ba7848383610d09565b50505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b806001600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610e0057816001600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a083604051610df7919061109f565b60405180910390a25b6001600084815260200190815260200160002060010160149054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1614610ebb57806001600085815260200190815260200160002060010160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550827f1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa6882604051610eb291906111f2565b60405180910390a25b505050565b6000610ecb30610f2a565b15905090565b600060019054906101000a900460ff16610f20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1790611573565b60405180910390fd5b610f28610f4d565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9390611573565b60405180910390fd5b33600160008060001b815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080fd5b6000819050919050565b61100e81610ffb565b811461101957600080fd5b50565b60008135905061102b81611005565b92915050565b60006020828403121561104757611046610ff6565b5b60006110558482850161101c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110898261105e565b9050919050565b6110998161107e565b82525050565b60006020820190506110b46000830184611090565b92915050565b6110c38161107e565b81146110ce57600080fd5b50565b6000813590506110e0816110ba565b92915050565b6000806000606084860312156110ff576110fe610ff6565b5b600061110d8682870161101c565b935050602061111e8682870161101c565b925050604061112f868287016110d1565b9150509250925092565b61114281610ffb565b82525050565b600060208201905061115d6000830184611139565b92915050565b600067ffffffffffffffff82169050919050565b61118081611163565b811461118b57600080fd5b50565b60008135905061119d81611177565b92915050565b600080604083850312156111ba576111b9610ff6565b5b60006111c88582860161101c565b92505060206111d98582860161118e565b9150509250929050565b6111ec81611163565b82525050565b600060208201905061120760008301846111e3565b92915050565b6000806040838503121561122457611223610ff6565b5b60006112328582860161101c565b9250506020611243858286016110d1565b9150509250929050565b600080600080600060a0868803121561126957611268610ff6565b5b60006112778882890161101c565b95505060206112888882890161101c565b9450506040611299888289016110d1565b93505060606112aa888289016110d1565b92505060806112bb8882890161118e565b9150509295509295909350565b60008115159050919050565b6112dd816112c8565b81146112e857600080fd5b50565b6000813590506112fa816112d4565b92915050565b6000806040838503121561131757611316610ff6565b5b6000611325858286016110d1565b9250506020611336858286016112eb565b9150509250929050565b6000806000806080858703121561135a57611359610ff6565b5b60006113688782880161101c565b9450506020611379878288016110d1565b935050604061138a878288016110d1565b925050606061139b8782880161118e565b91505092959194509250565b600080604083850312156113be576113bd610ff6565b5b60006113cc858286016110d1565b92505060206113dd858286016110d1565b9150509250929050565b6113f0816112c8565b82525050565b600060208201905061140b60008301846113e7565b92915050565b6000819050919050565b61142c61142782610ffb565b611411565b82525050565b600061143e828561141b565b60208201915061144e828461141b565b6020820191508190509392505050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006114cb602e8361145e565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061155d602b8361145e565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b905091905056fea26469706673582212204f974b01098694ad6c0b4fa00b11562b746a9587bbb9f1dd7f3473bfa3066ffd64736f6c634300080a0033";

export class EDNSRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EDNSRegistry> {
    return super.deploy(overrides || {}) as Promise<EDNSRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EDNSRegistry {
    return super.attach(address) as EDNSRegistry;
  }
  connect(signer: Signer): EDNSRegistry__factory {
    return super.connect(signer) as EDNSRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EDNSRegistryInterface {
    return new utils.Interface(_abi) as EDNSRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EDNSRegistry {
    return new Contract(address, _abi, signerOrProvider) as EDNSRegistry;
  }
}
