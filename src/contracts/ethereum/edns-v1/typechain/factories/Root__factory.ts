/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Root, RootInterface } from "../Root";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "TLDLocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "edns",
    outputs: [
      {
        internalType: "contract EDNS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract EDNS",
        name: "_edns",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setSubnodeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611313806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bf36cf3c11610071578063bf36cf3c14610165578063c4d66de814610183578063cbe9e7641461019f578063da8c229e146101cf578063e0dba60f146101ff578063f2fde38b1461021b576100b4565b806301670ba9146100b957806301ffc9a7146100d55780634e543b2614610105578063715018a6146101215780638cb8ecec1461012b5780638da5cb5b14610147575b600080fd5b6100d360048036038101906100ce9190610c39565b610237565b005b6100ef60048036038101906100ea9190610cbe565b61030f565b6040516100fc9190610d06565b60405180910390f35b61011f600480360381019061011a9190610d7f565b610379565b005b61012961048a565b005b61014560048036038101906101409190610dac565b610512565b005b61014f610673565b60405161015c9190610dfb565b60405180910390f35b61016d61069d565b60405161017a9190610e75565b60405180910390f35b61019d60048036038101906101989190610ece565b6106c3565b005b6101b960048036038101906101b49190610c39565b6107b1565b6040516101c69190610d06565b60405180910390f35b6101e960048036038101906101e49190610d7f565b6107d1565b6040516101f69190610d06565b60405180910390f35b61021960048036038101906102149190610f27565b6107f1565b005b61023560048036038101906102309190610d7f565b610916565b005b61023f610a0e565b73ffffffffffffffffffffffffffffffffffffffff1661025d610673565b73ffffffffffffffffffffffffffffffffffffffff16146102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa90610fc4565b60405180910390fd5b807f1764176cfa565853ba1ded547a830a9f9bff95231ef6fd228b3ddd617577756960405160405180910390a260016067600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610381610a0e565b73ffffffffffffffffffffffffffffffffffffffff1661039f610673565b73ffffffffffffffffffffffffffffffffffffffff16146103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90610fc4565b60405180910390fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a6000801b836040518363ffffffff1660e01b8152600401610455929190610ff3565b600060405180830381600087803b15801561046f57600080fd5b505af1158015610483573d6000803e3d6000fd5b5050505050565b610492610a0e565b73ffffffffffffffffffffffffffffffffffffffff166104b0610673565b73ffffffffffffffffffffffffffffffffffffffff1614610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd90610fc4565b60405180910390fd5b6105106000610a16565b565b606560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661059e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105959061108e565b60405180910390fd5b6067600083815260200190815260200160002060009054906101000a900460ff16156105c957600080fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59236000801b84846040518463ffffffff1660e01b815260040161062b939291906110ae565b6020604051808303816000875af115801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e91906110fa565b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff166106eb5760008054906101000a900460ff16156106f4565b6106f3610adc565b5b610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90611199565b60405180910390fd5b60008060019054906101000a900460ff161590508015610783576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61078c82610aed565b80156107ad5760008060016101000a81548160ff0219169083151502179055505b5050565b60676020528060005260406000206000915054906101000a900460ff1681565b60656020528060005260406000206000915054906101000a900460ff1681565b6107f9610a0e565b73ffffffffffffffffffffffffffffffffffffffff16610817610673565b73ffffffffffffffffffffffffffffffffffffffff161461086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490610fc4565b60405180910390fd5b80606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf878260405161090a9190610d06565b60405180910390a25050565b61091e610a0e565b73ffffffffffffffffffffffffffffffffffffffff1661093c610673565b73ffffffffffffffffffffffffffffffffffffffff1614610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990610fc4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f99061122b565b60405180910390fd5b610a0b81610a16565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610ae730610b48565b15905090565b600060019054906101000a900460ff16610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b33906112bd565b60405180910390fd5b610b4581610b6b565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb1906112bd565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b6000819050919050565b610c1681610c03565b8114610c2157600080fd5b50565b600081359050610c3381610c0d565b92915050565b600060208284031215610c4f57610c4e610bfe565b5b6000610c5d84828501610c24565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610c9b81610c66565b8114610ca657600080fd5b50565b600081359050610cb881610c92565b92915050565b600060208284031215610cd457610cd3610bfe565b5b6000610ce284828501610ca9565b91505092915050565b60008115159050919050565b610d0081610ceb565b82525050565b6000602082019050610d1b6000830184610cf7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4c82610d21565b9050919050565b610d5c81610d41565b8114610d6757600080fd5b50565b600081359050610d7981610d53565b92915050565b600060208284031215610d9557610d94610bfe565b5b6000610da384828501610d6a565b91505092915050565b60008060408385031215610dc357610dc2610bfe565b5b6000610dd185828601610c24565b9250506020610de285828601610d6a565b9150509250929050565b610df581610d41565b82525050565b6000602082019050610e106000830184610dec565b92915050565b6000819050919050565b6000610e3b610e36610e3184610d21565b610e16565b610d21565b9050919050565b6000610e4d82610e20565b9050919050565b6000610e5f82610e42565b9050919050565b610e6f81610e54565b82525050565b6000602082019050610e8a6000830184610e66565b92915050565b6000610e9b82610d41565b9050919050565b610eab81610e90565b8114610eb657600080fd5b50565b600081359050610ec881610ea2565b92915050565b600060208284031215610ee457610ee3610bfe565b5b6000610ef284828501610eb9565b91505092915050565b610f0481610ceb565b8114610f0f57600080fd5b50565b600081359050610f2181610efb565b92915050565b60008060408385031215610f3e57610f3d610bfe565b5b6000610f4c85828601610d6a565b9250506020610f5d85828601610f12565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610fae602083610f67565b9150610fb982610f78565b602082019050919050565b60006020820190508181036000830152610fdd81610fa1565b9050919050565b610fed81610c03565b82525050565b60006040820190506110086000830185610fe4565b6110156020830184610dec565b9392505050565b7f436f6e74726f6c6c61626c653a2043616c6c6572206973206e6f74206120636f60008201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000602082015250565b6000611078602883610f67565b91506110838261101c565b604082019050919050565b600060208201905081810360008301526110a78161106b565b9050919050565b60006060820190506110c36000830186610fe4565b6110d06020830185610fe4565b6110dd6040830184610dec565b949350505050565b6000815190506110f481610c0d565b92915050565b6000602082840312156111105761110f610bfe565b5b600061111e848285016110e5565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611183602e83610f67565b915061118e82611127565b604082019050919050565b600060208201905081810360008301526111b281611176565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611215602683610f67565b9150611220826111b9565b604082019050919050565b6000602082019050818103600083015261124481611208565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006112a7602b83610f67565b91506112b28261124b565b604082019050919050565b600060208201905081810360008301526112d68161129a565b905091905056fea26469706673582212204351c20c061d3413574dcfb2da601e5ff2a5cb4db3f8b59e06dc3c27f9bfa96c64736f6c634300080a0033";

export class Root__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Root> {
    return super.deploy(overrides || {}) as Promise<Root>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Root {
    return super.attach(address) as Root;
  }
  connect(signer: Signer): Root__factory {
    return super.connect(signer) as Root__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootInterface {
    return new utils.Interface(_abi) as RootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Root {
    return new Contract(address, _abi, signerOrProvider) as Root;
  }
}
