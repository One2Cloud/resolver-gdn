/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClassicalRegistrarController,
  ClassicalRegistrarControllerInterface,
} from "../ClassicalRegistrarController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LABEL_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_LABEL_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "tld",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "durations",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token_",
        type: "address",
      },
      {
        internalType: "contract IDomainPriceOracle",
        name: "domainPrice_",
        type: "address",
      },
      {
        internalType: "contract ITokenPriceOracle",
        name: "tokenPrice_",
        type: "address",
      },
      {
        internalType: "contract IBaseRegistrar",
        name: "registrar_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "coinId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "tld",
        type: "bytes",
      },
    ],
    name: "isAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "tld",
        type: "bytes",
      },
    ],
    name: "isAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "tld",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "tld",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "host",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "host",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061185d806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063a217fddf116100ad578063dd4984cb11610071578063dd4984cb1461025b578063e9579c2e14610263578063f7013ef614610276578063f87edf6e14610289578063fcdcdade1461029c57600080fd5b8063a217fddf1461022d578063a753e30314610207578063b4f7f24814610235578063c0f64d0714610159578063d547741f1461024857600080fd5b806336568abe116100f457806336568abe146101c55780636464e58f146101d857806375b238fc146101e05780638f90a72f1461020757806391d148541461021a57600080fd5b806301ffc9a7146101315780630c92b3de14610159578063248a9ca31461016c5780632891e9cf1461019d5780632f2ff15d146101b0575b600080fd5b61014461013f3660046110e1565b6102af565b60405190151581526020015b60405180910390f35b6101446101673660046111ae565b6102e6565b61018f61017a366004611236565b60009081526065602052604090206001015490565b604051908152602001610150565b6101446101ab36600461124f565b6102f9565b6101c36101be3660046112cb565b610395565b005b6101c36101d33660046112cb565b6103c0565b61018f604081565b61018f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b61014461021536600461124f565b610443565b6101446102283660046112cb565b61044e565b61018f600081565b6101c3610243366004611318565b610479565b6101c36102563660046112cb565b6104e7565b61018f600581565b6101c361027136600461139f565b61050d565b6101c3610284366004611413565b610578565b61018f610297366004611477565b610643565b6101446102aa3660046114e4565b6106cd565b60006001600160e01b03198216637965db0b60e01b14806102e057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006102f1846107df565b949350505050565b60006103058383610443565b801561038e5750609854604051632891e9cf60e01b81526001600160a01b0390911690632891e9cf9061033e9086908690600401611575565b60206040518083038186803b15801561035657600080fd5b505afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e91906115a3565b9392505050565b6000828152606560205260409020600101546103b18133610a7b565b6103bb8383610adf565b505050565b6001600160a01b03811633146104355760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61043f8282610b65565b5050565b600061038e83610bcc565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60985460405163169efe4960e31b81526001600160a01b039091169063b4f7f248906104af9087908790309087906004016115c5565b600060405180830381600087803b1580156104c957600080fd5b505af11580156104dd573d6000803e3d6000fd5b5050505050505050565b6000828152606560205260409020600101546105038133610a7b565b6103bb8383610b65565b6098546040516374abce1760e11b81526001600160a01b039091169063e9579c2e9061054190869086908690600401611616565b600060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b50505050505050565b600054610100900460ff166105935760005460ff1615610597565b303b155b6105fa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161042c565b600054610100900460ff1615801561061c576000805461ffff19166101011790555b6106298686868686610dae565b801561063b576000805461ff00191690555b505050505050565b609954825160208401206040516311d6bf3b60e01b81526000926001600160a01b0316916311d6bf3b9161067d9188918790600401611656565b60206040518083038186803b15801561069557600080fd5b505afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f1919061167b565b609854604051637e6e6d6f60e11b81526000916001600160a01b03169063fcdcdade906106fe908590600401611694565b60206040518083038186803b15801561071657600080fd5b505afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e91906115a3565b80156102e0575060985482516020840120604051633743b35f60e21b815260048101919091523060248201526001600160a01b039091169063dd0ecd7c9060440160206040518083038186803b1580156107a757600080fd5b505afa1580156107bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e091906115a3565b6000604082511015806107f457506005825111155b6108315760405162461bcd60e51b815260206004820152600e60248201526d0929cac82989288be988a9c8ea8960931b604482015260640161042c565b6000805b8351811015610a7157606160f81b6001600160f81b03191684828151811061085f5761085f6116a7565b01602001516001600160f81b031916108015906108aa5750603d60f91b6001600160f81b031916848281518110610898576108986116a7565b01602001516001600160f81b03191611155b8061091c5750600360fc1b6001600160f81b0319168482815181106108d1576108d16116a7565b01602001516001600160f81b0319161080159061091c5750603960f81b6001600160f81b03191684828151811061090a5761090a6116a7565b01602001516001600160f81b03191611155b806109545750602d60f81b6001600160f81b031916848281518110610943576109436116a7565b01602001516001600160f81b031916145b8061098c5750605f60f81b6001600160f81b03191684828151811061097b5761097b6116a7565b01602001516001600160f81b031916145b806109c45750601760f91b6001600160f81b0319168482815181106109b3576109b36116a7565b01602001516001600160f81b031916145b6109e05760405162461bcd60e51b815260040161042c906116bd565b6001600160f81b03198216601760f91b148015610a1f5750838181518110610a0a57610a0a6116a7565b01602001516001600160f81b03198381169116145b15610a3c5760405162461bcd60e51b815260040161042c906116bd565b838181518110610a4e57610a4e6116a7565b01602001516001600160f81b031916915080610a69816116fe565b915050610835565b5060019392505050565b610a85828261044e565b61043f57610a9d816001600160a01b03166014610df1565b610aa8836020610df1565b604051602001610ab9929190611719565b60408051601f198184030181529082905262461bcd60e51b825261042c91600401611694565b610ae9828261044e565b61043f5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610b213390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b6f828261044e565b1561043f5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600060408251108015610be0575060058251115b610c1d5760405162461bcd60e51b815260206004820152600e60248201526d0929cac8298aa88be988a9c8ea8960931b604482015260640161042c565b60005b8251811015610da557606160f81b6001600160f81b031916838281518110610c4a57610c4a6116a7565b01602001516001600160f81b03191610801590610c955750603d60f91b6001600160f81b031916838281518110610c8357610c836116a7565b01602001516001600160f81b03191611155b80610d075750600360fc1b6001600160f81b031916838281518110610cbc57610cbc6116a7565b01602001516001600160f81b03191610801590610d075750603960f81b6001600160f81b031916838281518110610cf557610cf56116a7565b01602001516001600160f81b03191611155b80610d3f5750602d60f81b6001600160f81b031916838281518110610d2e57610d2e6116a7565b01602001516001600160f81b031916145b80610d775750605f60f81b6001600160f81b031916838281518110610d6657610d666116a7565b01602001516001600160f81b031916145b610d935760405162461bcd60e51b815260040161042c906116bd565b80610d9d816116fe565b915050610c20565b50600192915050565b600054610100900460ff16610dd55760405162461bcd60e51b815260040161042c9061178e565b610de28585858585610f8d565b610dea611063565b5050505050565b60606000610e008360026117d9565b610e0b9060026117f8565b67ffffffffffffffff811115610e2357610e2361110b565b6040519080825280601f01601f191660200182016040528015610e4d576020820181803683370190505b509050600360fc1b81600081518110610e6857610e686116a7565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e9757610e976116a7565b60200101906001600160f81b031916908160001a9053506000610ebb8460026117d9565b610ec69060016117f8565b90505b6001811115610f3e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610efa57610efa6116a7565b1a60f81b828281518110610f1057610f106116a7565b60200101906001600160f81b031916908160001a90535060049490941c93610f3781611810565b9050610ec9565b50831561038e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161042c565b600054610100900460ff16610fb45760405162461bcd60e51b815260040161042c9061178e565b609780546001600160a01b038088166001600160a01b03199283161790925560998054878416908316179055609a80548684169083161790556098805492851692909116919091179055609b81905561102e7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775600061108c565b6110396000336110d7565b610dea7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336110d7565b600054610100900460ff1661108a5760405162461bcd60e51b815260040161042c9061178e565b565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61043f8282610adf565b6000602082840312156110f357600080fd5b81356001600160e01b03198116811461038e57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261113257600080fd5b813567ffffffffffffffff8082111561114d5761114d61110b565b604051601f8301601f19908116603f011681019082821181831017156111755761117561110b565b8160405283815286602085880101111561118e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156111c357600080fd5b833567ffffffffffffffff808211156111db57600080fd5b6111e787838801611121565b945060208601359150808211156111fd57600080fd5b61120987838801611121565b9350604086013591508082111561121f57600080fd5b5061122c86828701611121565b9150509250925092565b60006020828403121561124857600080fd5b5035919050565b6000806040838503121561126257600080fd5b823567ffffffffffffffff8082111561127a57600080fd5b61128686838701611121565b9350602085013591508082111561129c57600080fd5b506112a985828601611121565b9150509250929050565b6001600160a01b03811681146112c857600080fd5b50565b600080604083850312156112de57600080fd5b8235915060208301356112f0816112b3565b809150509250929050565b803567ffffffffffffffff8116811461131357600080fd5b919050565b6000806000806080858703121561132e57600080fd5b843567ffffffffffffffff8082111561134657600080fd5b61135288838901611121565b9550602087013591508082111561136857600080fd5b5061137587828801611121565b9350506040850135611386816112b3565b9150611394606086016112fb565b905092959194509250565b6000806000606084860312156113b457600080fd5b833567ffffffffffffffff808211156113cc57600080fd5b6113d887838801611121565b945060208601359150808211156113ee57600080fd5b506113fb86828701611121565b92505061140a604085016112fb565b90509250925092565b600080600080600060a0868803121561142b57600080fd5b8535611436816112b3565b94506020860135611446816112b3565b93506040860135611456816112b3565b92506060860135611466816112b3565b949793965091946080013592915050565b60008060006060848603121561148c57600080fd5b833567ffffffffffffffff808211156114a457600080fd5b6114b087838801611121565b945060208601359150808211156114c657600080fd5b506114d386828701611121565b925050604084013590509250925092565b6000602082840312156114f657600080fd5b813567ffffffffffffffff81111561150d57600080fd5b6102f184828501611121565b60005b8381101561153457818101518382015260200161151c565b83811115611543576000848401525b50505050565b60008151808452611561816020860160208601611519565b601f01601f19169290920160200192915050565b6040815260006115886040830185611549565b828103602084015261159a8185611549565b95945050505050565b6000602082840312156115b557600080fd5b8151801515811461038e57600080fd5b6080815260006115d86080830187611549565b82810360208401526115ea8187611549565b6001600160a01b03959095166040840152505067ffffffffffffffff9190911660609091015292915050565b6060815260006116296060830186611549565b828103602084015261163b8186611549565b91505067ffffffffffffffff83166040830152949350505050565b6060815260006116696060830186611549565b60208301949094525060400152919050565b60006020828403121561168d57600080fd5b5051919050565b60208152600061038e6020830184611549565b634e487b7160e01b600052603260045260246000fd5b60208082526011908201527024a72b20a624a22fa1a420a920a1aa22a960791b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611712576117126116e8565b5060010190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611751816017850160208801611519565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611782816028840160208801611519565b01602801949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008160001904831182151516156117f3576117f36116e8565b500290565b6000821982111561180b5761180b6116e8565b500190565b60008161181f5761181f6116e8565b50600019019056fea26469706673582212205f6abc53f08bd532359cb9a81e132516cfd6a668c4e27f0d1d8fb0173ddd87d064736f6c63430008090033";

export class ClassicalRegistrarController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClassicalRegistrarController> {
    return super.deploy(
      overrides || {}
    ) as Promise<ClassicalRegistrarController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClassicalRegistrarController {
    return super.attach(address) as ClassicalRegistrarController;
  }
  connect(signer: Signer): ClassicalRegistrarController__factory {
    return super.connect(signer) as ClassicalRegistrarController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClassicalRegistrarControllerInterface {
    return new utils.Interface(_abi) as ClassicalRegistrarControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClassicalRegistrarController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ClassicalRegistrarController;
  }
}
