/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Diamond,
  DiamondInterface,
} from "../../../contracts/diamond/Diamond";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

export class Diamond__factory {
  static readonly abi = _abi;
  static createInterface(): DiamondInterface {
    return new Interface(_abi) as DiamondInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Diamond {
    return new Contract(address, _abi, runner) as unknown as Diamond;
  }
}
