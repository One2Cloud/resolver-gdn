/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISynchronizerApplication,
  ISynchronizerApplicationInterface,
} from "../../../../contracts/crosschain/interfaces/ISynchronizerApplication";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ews",
        type: "bytes",
      },
    ],
    name: "ExecuteSync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "ews",
        type: "bytes",
      },
    ],
    name: "RequestSync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "ews",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "SyncError",
    type: "event",
  },
  {
    inputs: [],
    name: "getSynchronizer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "ews",
        type: "bytes",
      },
    ],
    name: "receiveSync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISynchronizer",
        name: "synchronizer_",
        type: "address",
      },
    ],
    name: "setSynchronizer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISynchronizerApplication__factory {
  static readonly abi = _abi;
  static createInterface(): ISynchronizerApplicationInterface {
    return new Interface(_abi) as ISynchronizerApplicationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISynchronizerApplication {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISynchronizerApplication;
  }
}
